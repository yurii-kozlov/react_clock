{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","updateTimeId","this","window","setInterval","setState","console","info","toLocaleTimeString","prevProps","clockName","props","debug","clearInterval","className","Component","getRandomName","value","now","toString","slice","App","hasClock","updateNameId","showClockHandler","hideClockHandler","event","preventDefault","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAMaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,aAAe,EALjB,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,aAAeE,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEN,MAAO,IAAIC,OAE3BM,QAAQC,KAAK,EAAKT,MAAMC,MAAMS,wBAC7B,OAZP,gCAeE,SAAmBC,GACjB,IAAQC,EAAcR,KAAKS,MAAnBD,UAEJA,IAAcD,EAAUC,WAC1BJ,QAAQM,MAAR,uBAA8BH,EAAUC,UAAxC,eAAwDA,MAnB9D,kCAuBE,WACEG,cAAcX,KAAKD,gBAxBvB,oBA2BE,WACE,IAAQF,EAAUG,KAAKJ,MAAfC,MACAW,EAAcR,KAAKS,MAAnBD,UAER,OACE,sBAAKI,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGJ,IAGF,YAED,sBAAMI,UAAU,cAAhB,SACGf,EAAMS,8BAxCjB,GAA2BO,aCF3B,SAASC,IACP,IAAMC,EAAQjB,KAAKkB,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBH,GAQX,IAAMI,EAAb,4MACEvB,MAAyB,CACvBwB,UAAU,EACVZ,UAAW,WAHf,EAMEa,aAAe,EANjB,EAuBEC,iBAAmB,WACjB,EAAKnB,SAAS,CAAEiB,UAAU,KAxB9B,EA2BEG,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,EAAKtB,SAAS,CAAEiB,UAAU,KA7B9B,uDAQE,WAA2B,IAAD,OACxBpB,KAAKqB,aAAepB,OAAOC,aAAY,WACrC,EAAKC,SAAS,CAAEK,UAAWM,QAC1B,MAEHY,SAASC,iBAAiB,cAAe3B,KAAKuB,kBAC9CG,SAASC,iBAAiB,QAAS3B,KAAKsB,oBAd5C,kCAiBE,WACErB,OAAOU,cAAcX,KAAKqB,cAC1BK,SAASE,oBAAoB,cAAe5B,KAAKuB,kBACjDG,SAASE,oBAAoB,QAAS5B,KAAKsB,oBApB/C,oBAgCE,WACE,IAAQF,EAAapB,KAAKJ,MAAlBwB,SAER,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCQ,GAAY,cAAC,EAAD,CAAOZ,UAAWR,KAAKJ,MAAMY,mBAtClD,GAAyBK,aCZzBgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.25629b63.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { Component } from 'react';\n\ntype State = { today: Date };\ntype Props = { clockName: string };\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  updateTimeId = 0;\n\n  componentDidMount(): void {\n    this.updateTimeId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n\n      console.info(this.state.today.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    const { clockName } = this.props;\n\n    if (clockName !== prevProps.clockName) {\n      console.debug(`Renamed from ${prevProps.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.updateTimeId);\n  }\n\n  render() {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean,\n  clockName: string\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  updateNameId = 0;\n\n  componentDidMount(): void {\n    this.updateNameId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.hideClockHandler);\n    document.addEventListener('click', this.showClockHandler);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.updateNameId);\n    document.removeEventListener('contextmenu', this.hideClockHandler);\n    document.removeEventListener('click', this.showClockHandler);\n  }\n\n  showClockHandler = () => {\n    this.setState({ hasClock: true });\n  };\n\n  hideClockHandler = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock clockName={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}